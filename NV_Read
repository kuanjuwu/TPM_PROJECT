int nv_max;
char data_to_write[nv_max];
char *data_to_read;

/* Create a NVRAM object */
result = Tspi_Context_CreateObject(hContext, TSS_OBJECT_TYPE_NV, 0, &hNVStore);
if (result!=TSS_SUCCESS) { print_error("Tspi_Context_CreateObject: %x\n", result); exit(result); }

/* Set its arbitrary index to be 0x00011133 */
result = Tspi_SetAttribUint32(hNVStore, TSS_TSPATTRIB_NV_INDEX, 0, 0x0x00011133);
if (result!=TSS_SUCCESS) { print_error("Tspi_SetAttribUint32 index %x\n", result); exit(result); }

/* Set its Attributes, and it is only writeable by the owner */
result = Tspi_SetAttribUint32(hNVStore,TSS_TSPATTRIB_NV_PERMISSIONS, 0, TPM_NV_PER_OWNERWRITE);
if (result!=TSS_SUCCESS) { print_error("Tspi_SetAttribUint32 auth %x\n", result); exit(result); }

/* Next it holds nv_max bytes of data */
result = Tspi_SetAttribUint32(hNVStore, TSS_TSPATTRIB_NV_DATASIZE, 0, nv_max);
if (result!=TSS_SUCCESS) { print_error("Tspi_SetAttribUint32 size%x\n", result); exit(result); }

/* Read from the NVRAM space */
result = Tspi_NV_ReadValue(hNVStore, 0, &nv_max, &data_to_read);
if (result!=TSS_SUCCESS) { print_error("Tspi_NV_ReadValue: %x\n", result); exit(result); }

